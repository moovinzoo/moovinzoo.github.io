{"version":3,"file":"component---src-pages-blog-index-js-36686e351ac2d9ef96c0.js","mappings":"mJAIA,MAAMA,EAAYC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAAVJ,CAAU,yDAMtBK,EAAUL,EAAAA,QAAOM,GAAEJ,WAAA,CAAAC,YAAA,kBAAAC,YAAA,eAATJ,CAAS,0BAInBO,EAAWP,EAAAA,QAAOQ,GAAEN,WAAA,CAAAC,YAAA,mBAAAC,YAAA,eAATJ,CAAS,kDAMpBS,EAAcT,EAAAA,QAAOU,GAAER,WAAA,CAAAC,YAAA,sBAAAC,YAAA,eAATJ,CAAS,yBAIvBW,GAAcX,EAAAA,EAAAA,SAAOY,EAAAA,MAAKV,WAAA,CAAAC,YAAA,sBAAAC,YAAA,eAAZJ,CAAY,kBAI1Ba,EAAYb,EAAAA,QAAOc,OAAMZ,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAAbJ,CAAa,8DA0C/B,IAnCee,IAA8B,IAA7B,UAAEC,EAAS,SAAEC,GAAUF,EACrC,MAAMG,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACEC,EAAAA,cAACrB,EAAS,KACRqB,EAAAA,cAACP,EAAS,KAAEK,EAAKG,KAAKC,aAAaC,OACnCH,EAAAA,cAAA,WACEA,EAAAA,cAACb,EAAQ,KACPa,EAAAA,cAACX,EAAW,KACVW,EAAAA,cAACT,EAAW,CAACa,GAAG,KAAI,SAEtBJ,EAAAA,cAACX,EAAW,KACVW,EAAAA,cAACT,EAAW,CAACa,GAAG,UAAS,UAE3BJ,EAAAA,cAACX,EAAW,KACVW,EAAAA,cAACT,EAAW,CAACa,GAAG,SAAQ,WAI9BJ,EAAAA,cAAA,YACEA,EAAAA,cAACf,EAAO,KAAEW,GACTC,GAEO,C,+CC/ChB,IAhBYF,IAAgB,IAAf,MAAEQ,GAAOR,EACpB,MAAMG,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACEC,EAAAA,cAAA,aAAQG,EAAM,MAAIL,EAAKG,KAAKC,aAAaC,MAAc,C,6GCV3D,MAuCaE,EAAOA,IAAML,EAAAA,cAACM,EAAAA,EAAG,CAACH,MAAM,kBAErC,UAzCiBR,IAAe,IAAd,KAAEG,GAAMH,EACxB,OACEK,EAAAA,cAACO,EAAAA,EAAM,CAACX,UAAU,iBAEdE,EAAKU,QAAQC,MAAMC,KAAKC,GACtBX,EAAAA,cAAA,WAASY,IAAKD,EAAKE,SAASC,IAC1Bd,EAAAA,cAAA,UACEA,EAAAA,cAACR,EAAAA,KAAI,CAACY,GAAK,SAAQO,EAAKE,SAASE,YAAYC,QAC1CL,EAAKE,SAASE,YAAYZ,QAG/BH,EAAAA,cAAA,SAAG,WAASW,EAAKE,SAASE,YAAYE,SAIrC,C","sources":["webpack://personal-web/./src/components/layout.js","webpack://personal-web/./src/components/seo.js","webpack://personal-web/./src/pages/blog/index.js"],"sourcesContent":["import * as React from 'react'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  margin: auto;\n  max-width: 500px;\n  font-family: sans-serif;\n`;\n\nconst Heading = styled.h1`\n  color: rebeccapurple;\n`;\n\nconst NavLinks = styled.ul`\n  display: flex;\n  list-style: none;\n  padding-left: 0;\n`;\n\nconst NavLinkItem = styled.li`\n  padding-right: 2rem;\n`;\n\nconst NavLinkText = styled(Link)`\n  color: black;\n`;\n\nconst SiteTitle = styled.header`\n  font-size: 3rem;\n  color: gray;\n  font-weight: 700;\n  margin: 3rem 0;\n`;\n\nconst Layout = ({ pageTitle, children }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <Container>\n      <SiteTitle>{data.site.siteMetadata.title}</SiteTitle>\n      <nav>\n        <NavLinks>\n          <NavLinkItem>\n            <NavLinkText to=\"/\">Home</NavLinkText>\n          </NavLinkItem>\n          <NavLinkItem>\n            <NavLinkText to=\"/about\">About</NavLinkText>\n          </NavLinkItem>\n          <NavLinkItem>\n            <NavLinkText to=\"/blog\">Blog</NavLinkText>\n          </NavLinkItem>\n        </NavLinks>\n      </nav>\n      <main>\n        <Heading>{pageTitle}</Heading>\n        {children}\n      </main>\n    </Container>\n  )\n}\n\nexport default Layout\n","import * as React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst Seo = ({ title }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <title>{title} | {data.site.siteMetadata.title}</title>\n  )\n}\n\nexport default Seo\n","import * as React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../../components/layout'\nimport Seo from '../../components/seo'\n\nconst BlogPage = ({ data }) => {\n  return (\n    <Layout pageTitle=\"My Blog Posts\">\n      {\n        data.allFile.nodes.map((node) => (\n          <article key={node.childMdx.id}>\n            <h2>\n              <Link to={`/blog/${node.childMdx.frontmatter.slug}`}>\n                {node.childMdx.frontmatter.title}\n              </Link>\n            </h2>\n            <p>Posted: {node.childMdx.frontmatter.date}</p>\n          </article>\n        ))\n      }\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allFile(\n      filter: { sourceInstanceName: { eq: \"blog\" }, extension: { eq: \"mdx\" } }\n      sort: { childMdx: {frontmatter: { date: DESC } } }\n    ) {\n      nodes {\n        childMdx {\n          frontmatter {\n            date(formatString: \"MMMM D, YYYY\")\n            title\n            slug\n          }\n          id\n        }\n      }\n    }\n  }\n`\n\nexport const Head = () => <Seo title=\"My Blog Posts\" />\n\nexport default BlogPage\n"],"names":["Container","styled","div","withConfig","displayName","componentId","Heading","h1","NavLinks","ul","NavLinkItem","li","NavLinkText","Link","SiteTitle","header","_ref","pageTitle","children","data","useStaticQuery","React","site","siteMetadata","title","to","Head","Seo","Layout","allFile","nodes","map","node","key","childMdx","id","frontmatter","slug","date"],"sourceRoot":""}